name: Deploy to GitHub Codespaces

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Setup SQLite database
      run: |
        npx prisma generate
        npx prisma db push
        npm run db:seed
      env:
        DATABASE_URL: "file:./prisma/dev.db"
        NEXTAUTH_URL: "http://localhost:3000"
        NEXTAUTH_SECRET: "codespaces-secret"
        
    - name: Build application
      run: npm run build
      env:
        DATABASE_URL: "file:./prisma/dev.db"
        NEXTAUTH_URL: "http://localhost:3000"
        NEXTAUTH_SECRET: "codespaces-secret"
        
    - name: Test application
      run: |
        npm start &
        sleep 10
        curl -f http://localhost:3000 || exit 1
        pkill -f "npm start"
        
    - name: Create deployment status
      uses: actions/github-script@v7
      with:
        script: |
          const { data } = await github.rest.repos.createDeployment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: context.sha,
            environment: 'github-codespaces',
            description: 'Deployment to GitHub Codespaces',
            auto_merge: false
          })
          
          await github.rest.repos.createDeploymentStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            deployment_id: data.id,
            state: 'success',
            environment_url: `https://${context.repo.owner}-${context.repo.repo}-${context.sha.substring(0, 7)}.github.dev`
          })
